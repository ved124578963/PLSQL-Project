-- Players Table
create table players (player_id number primary key , player_name varchar2(50) , created_at date default sysdate);

-- Games Table
create table games(game_id number primary key , game_name varchar2(50));

-- Scores Table
create table scores (score_id number generated by default as Identity primary key , player_id number , game_name varchar2(100) , score number , achieved_at date default sysdate , 
    foreign key(player_id) references players(player_id));

-- Matches Table
create table matches(match_id number primary key , game_id number , match_date date , foreign key(game_id) references games(game_id) on delete cascade);

-- Match_Scores Table
create table match_scores(match_id number , player_id number  , score number not null , foreign key(match_id) references matches(match_id) on delete cascade, 
    foreign key(player_id) references players(player_id) on delete cascade, primary key(match_id,player_id));

-- Rankings Table
create table rankings(player_id number references players(player_id) , game_id number references games(game_id) , total_score number not null , 
    rank number not null , last_updated date , primary key(player_id , game_id));


-- Players Table
insert into players values(1 , 'John' , '2-Jan-2025');
insert into players values(2 , 'David' , '22-Dec-2024');
insert into players values(3 , 'George' , '29-Dec-2024') ;
insert into players values(4 , 'Mike' , '15-Dec-2024');
insert into players values(5 , 'Steve',' 4-Jan-2025');

-- Games Table
insert into games values (1 , 'Chess' ); 
insert into games values (2 , 'OX' ) ;
insert into games values (3 , 'Bombsquad' );
insert into games values (4 , 'Ludo');
insert into games values (5 , 'Checkers' );

-- Scores Table
insert into scores(player_id , game_name , score , achieved_at) values ( 1, 'Chess', 850, '01-Jan-2025'); 
insert into scores(player_id , game_name , score , achieved_at) values ( 4, 'BombSquad', 900, '02-Jan-2025');
insert into scores(player_id , game_name , score , achieved_at) values ( 3, 'OX', 780, '03-Jan-2025'); 
insert into scores(player_id , game_name , score , achieved_at) values ( 2, 'BombSquad', 1270, '04-Jan-2025'); 
insert into scores(player_id , game_name , score , achieved_at) values ( 5, 'OX', 100, '05-Jan-2025');

-- Matches Table
insert into matches values (151, 1, '5-Jan-2025');
insert into matches values (152, 3, '6-Jan-2025');
insert into matches values (153, 1, '3-Jan-2025');
insert into matches values (154, 2, '5-Jan-2025');
insert into matches values (155, 2, '3-Jan-2025');

-- Match_Scores Table
insert into match_scores values (151, 1, 250);
insert into match_scores values (155, 2, 300);
insert into match_scores values (152, 3, 200);
insert into match_scores values (153, 1, 180);
insert into match_scores values (154, 2, 270); 

-- Rankings Table
insert into rankings values (1, 1, 430, 2, '04-Jan-2025');
insert into rankings values (2, 1, 570, 1,'04-Jan-2025');
insert into rankings values (3, 1, 200, 3,'04-Jan-2025');
insert into rankings values (1, 2, 180, 1,'04-Jan-2025');
insert into rankings values (2, 2, 0, 2, '04-Jan-2025');

-- Displaying All Tables
select * from players;
select * from games;
select * from scores;
select * from matches;
select * from match_scores;
select * from rankings;


--****************************************************************************************************************************************************************************************

create or replace procedure add_player(p_id players.player_id%type , p_name players.player_name%type , c_date players.created_at%type) is
begin
	insert into players(player_id , player_name , created_at) values (p_id , p_name , c_date);
	commit;
end;

set serveroutput on size = 100000
declare
	p_id players.player_id%type:=6;
	p_name players.player_name%type:='Sam';
	c_date players.created_at%type:='30-Nov-2024';
begin
	add_player(p_id , p_name , c_date);
	dbms_output.put_line('Player Id:' ||p_id ||'  Player Name:' ||p_name||'  Created Date:'||c_date);
end;

select * from players;

-- *****************************************************************************************************************************************************

create or replace procedure insert_scores(m_id number , p_id number , sc number , g_name varchar2 , ac_date date) is
    match_exists number;
begin 
    select count(*) into match_exists from matches where match_id = m_id;
	if match_exists = 0 then
    	insert into matches (match_id, game_id, match_date) values (m_id, 4, SYSDATE); -- Use a default `game_id` and the current date
	end if;
	insert into match_scores(match_id , player_id , score) values (m_id , p_id , sc);
	insert into scores(player_id , game_name , score , achieved_at) values ( p_id , g_name , sc , ac_date);
	update rankings r set total_score = total_score+sc where r.player_id = p_id;
	commit;
end;

set serveroutput on size=100000
declare 
	m_id number:=158;
	p_id number:=2;
	sc number:=250;
	g_name varchar2(50):= 'OX';
	ac_date date:= '6-Jan-2025';
begin
	insert_scores(m_id , p_id , sc , g_name , ac_date);
	dbms_output.put_line('Match Id:' || m_id || '  Player_id:' || p_id || '  Score:' ||sc);
end;
-- *********************************************************************************************************************************************************************************

create or replace procedure update_rank(g_id number) is
begin
	MERGE INTO rankings r
    USING (
        SELECT 
            player_id,
            game_id,
            RANK() OVER (PARTITION BY game_id ORDER BY total_score DESC) AS calculated_rank
        FROM rankings
        WHERE game_id = g_id
    ) t
    ON (r.player_id = t.player_id AND r.game_id = t.game_id)
    WHEN MATCHED THEN
        UPDATE SET r.rank = t.calculated_rank;
    COMMIT;
end;


begin
	update_rank(1);
end;
-- ***********************************************************************************************************************************************************************************

